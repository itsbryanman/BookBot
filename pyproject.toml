[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "bookbot"
version = "0.1.1"
description = "A cross-platform TUI audiobook renamer and organizer"
readme = "README.md"
license = {text = "MIT"}
authors = [{name = "BookBot", email = "bookbot@example.com"}]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Console",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Multimedia :: Sound/Audio",
    "Topic :: Utilities",
]
requires-python = ">=3.10"
dependencies = [
    "textual>=0.41.0",
    "mutagen>=1.47.0",
    "requests>=2.31.0",
    "click>=8.1.0",
    "pydantic>=2.4.0",
    "toml>=0.10.2",
    "rich>=13.0.0",
    "python-dateutil>=2.8.0",
    "rapidfuzz>=3.0.0",
    "aiofiles>=23.0.0",
    "aiohttp>=3.8.0",
    "keyring>=24.0.0",
    "beautifulsoup4>=4.12.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "mypy>=1.5.0",
    "ruff>=0.0.290",
    "textual-dev>=1.2.0",
]
conversion = [
    "ffmpeg-python>=0.2.0",
]
build = [
    "build>=0.10.0",
    "twine>=4.0.0",
    "pyinstaller>=5.0.0",
]

[project.scripts]
bookbot = "bookbot.cli:main"

[project.urls]
Homepage = "https://github.com/itsbryanman/BookBot"
Repository = "https://github.com/itsbryanman/BookBot"
Issues = "https://github.com/itsbryanman/BookBot/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["bookbot*"]

[tool.black]
line-length = 88
target-version = ['py310']

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true

[tool.ruff]
target-version = "py310"
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "requires_ffmpeg: marks tests that require ffmpeg",
]
